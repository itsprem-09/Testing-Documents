{
  "info": {
    "_postman_id": "e20f1b5f-3d2c-40ef-9e34-1b5c7c940c2a",
    "name": "Kishan-Andolan API Tests",
    "description": "API Test collection for the Kishan-Andolan project",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"testuser@example.com\",\n    \"password\": \"Password123\",\n    \"confirmPassword\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"testuser@example.com\",\n    \"password\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "profile"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Members",
      "item": [
        {
          "name": "Get All Members",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/members",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "members"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Register New Member",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"New Member\",\n    \"email\": \"newmember@example.com\",\n    \"phone\": \"9876543210\",\n    \"location\": \"Delhi\",\n    \"occupation\": \"Farmer\",\n    \"age\": 45\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/members/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "members",
                "register"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Team",
      "item": [
        {
          "name": "Get Team Members",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/team",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "team"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Team Member By ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/team/{{teamMemberId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "team",
                "{{teamMemberId}}"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Information Center",
      "item": [
        {
          "name": "Get All Information",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/information",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "information"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Information By ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/information/{{informationId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "information",
                "{{informationId}}"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Andolan Timeline",
      "item": [
        {
          "name": "Get Timeline Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/andolan/timeline",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "andolan",
                "timeline"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Timeline Event By ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/andolan/timeline/{{timelineEventId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "andolan",
                "timeline",
                "{{timelineEventId}}"
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "pm.test(\"Status code is 200 or 201\", function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
          "});",
          "",
          "pm.test(\"Response time is less than 500ms\", function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(500);",
          "});",
          "",
          "pm.test(\"Response has JSON body\", function () {",
          "    pm.response.to.have.jsonBody();",
          "});",
          "",
          "if (pm.response.code === 200) {",
          "    if (pm.request.url.path.includes(\"/login\")) {",
          "        pm.test(\"Login successful and returns token\", function () {",
          "            var jsonData = pm.response.json();",
          "            pm.expect(jsonData).to.have.property('token');",
          "            pm.environment.set(\"authToken\", jsonData.token);",
          "        });",
          "    }",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000"
    }
  ]
} 